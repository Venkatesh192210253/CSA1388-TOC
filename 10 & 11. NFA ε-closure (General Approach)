#include <stdio.h>

#define STATES 3
#define EPSILON -1

int transition[STATES][2] = {
    {1, EPSILON}, // State 0: on 'a' -> 1, ε -> none
    {2, EPSILON}, // State 1: on 'a' -> 2, ε -> none
    {EPSILON, EPSILON} // State 2: no transitions
};

void epsilonClosure(int state, int visited[]) {
    visited[state] = 1;
    for (int i = 0; i < 2; i++) {
        if (transition[state][i] == EPSILON) continue;
        if (!visited[transition[state][i]]) {
            epsilonClosure(transition[state][i], visited);
        }
    }
}

int main() {
    int visited[STATES];
    for (int i = 0; i < STATES; i++) {
        for (int j = 0; j < STATES; j++) visited[j] = 0;
        printf("Epsilon-closure of state %d: ", i);
        epsilonClosure(i, visited);
        for (int j = 0; j < STATES; j++) {
            if (visited[j]) printf("%d ", j);
        }
        printf("\n");
    }
    return 0;
}


Sample Output:

Epsilon-closure of state 0: 0 1 2
Epsilon-closure of state 1: 1 2
Epsilon-closure of state 2: 2
